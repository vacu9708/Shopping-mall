# Without health checks
version: '3'
# name: shopping_mall # name does not work in Jenkins
services:
  # Kafka/Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - myNetwork

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - myNetwork

  mySql:
    image: mysql:8
    container_name: mySql
    # restart: always
    environment:
      MYSQL_DATABASE: 'root' # you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: '123' # You can use whatever password you like
      MYSQL_ROOT_PASSWORD: '123' # Password for root access
    # Where our data will be persisted
    volumes:
      - /mysql_data:/mysql_data
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
      - myNetwork
  
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server #--appendonly yes
    # command: ["redis-server", "--bind", "redis", "--port", "6379"]
    ports:
      - '6379:6379'
    expose:
      - '6379'
    # network_mode: "host"
    volumes:
      - '/redis_data:/redis_data'
    networks:
      - myNetwork

networks:
  myNetwork:
    driver: myNetwork
    external: true